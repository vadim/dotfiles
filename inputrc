# vim: set filetype=readline:

$include /etc/inputrc
"\C-x\C-r": re-read-init-file

set input-meta on
set output-meta on
set convert-meta off

set completion-ignore-case on
set completion-query-items 150
set completion-prefix-display-length 3
set colored-completion-prefix on
set page-completions off

set mark-directories on
set mark-symlinked-directories on
set show-all-if-ambiguous on
set show-all-if-unmodified on
set colored-stats on
set visible-stats on

set expand-tilde on
set blink-matching-paren on

# Color the common prefix in menu-complete
set menu-complete-display-prefix On
set editing-mode vi

$if mode=vi
    set keymap vi
    set show-mode-in-prompt on
    set vi-cmd-mode-string " \1\e[1;31m\2:\1\e[0m\2 "
    set vi-ins-mode-string " \1\e[0;33m\2+\1\e[0m\2 "

    # these are for vi-command mode
    set keymap vi-command
    "\e[A": history-search-backward
    "\e[B": history-search-forward
    k:      history-search-backward
    j:      history-search-forward
    "\C-l": clear-screen

    # these are for vi-insert mode
    set keymap vi-insert
    "\e[A": history-search-backward
    "\e[B": history-search-forward
    "\C-l": clear-screen
$endif

set bell-style none

"\C-a": beginning-of-line
"\C-e": end-of-line

"\e[A": history-search-backward
"\C-p": history-search-backward

"\e[B": history-search-forward
"\C-n": history-search-forward

# mappings for Ctrl-left-arrow and Ctrl-right-arrow for word moving
"\e[1;5C": forward-word
"\e[1;5D": backward-word
"\e[5C": forward-word
"\e[5D": backward-word
"\e\e[C": forward-word
"\e\e[D": backward-word

# Macros that are convenient for shell interaction
$if Bash
   # edit the path
   "\C-xp": "PATH=${PATH}\e\C-e\C-a\ef\C-f"
   # prepare to type a quoted word -- insert open and close double quotes
   # and move to just after the open quote
   "\C-x\'": "\"\"\C-b"
   # insert a backslash (testing backslash escapes in sequences and macros)
   "\C-x\\": "\\"
   # Quote the current or previous word
   "\C-xq": "\eb\"\ef\""
   # Add a binding to refresh the line, which is unbound
   "\C-xr": redraw-current-line
   # Edit variable on current line.
   "\M-\C-v": "\C-a\C-k$\C-y\M-\C-e\C-a\C-y="
   #do history expansion when space entered
   Space: magic-space

   "\C-xo": ":::"
$endif

"\C-f": " %>% "
"\C-y": " %like% "
"\C- ": "    "
